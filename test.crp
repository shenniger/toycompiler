; A sample file
;(defun main (((funptr i32 (i32 i32 i32)) a)) i32 (funcall a 3 5 7))
;(defun f () float 3.2)
;(defun myfun ((i32 a b c)) i32 4)
;
;(defun a () i32 (main myfun))
;
;(funproto puts (((ptr const char) str)) i32)
;(defun main () i32 (
;  (puts "Hallo Welt!")
;  0))
;
;(defun a () (ptr const char) "Hallo")
;
;(global a (array 10 i32))
;(defun geta () (ptr i32) a)
;(defun seta ((i32 x)) void (set (ptr-deref (+ a 1)) x)) ; TODO!!!
;
;(global a i32)
;(defun seta ((i32 b)) void (set a b))
;(defun getval ((i32 a b)) i32 (
;  (var i32 x a)
;  (set x b)
;  (set x a)
;  (set x b)
;  x))
;(static-run (var stuff (scope (
;  (var i 1000000)
;  (var l (quote ()))
;  (while (!= i 0) (
;    (set l (append-first l (quasiquote ((p (quasiunquote i))))))
;    (set i (- i 1))))
;  l))))
;(defun main2 () i32 ((static stuff) 0))
;(funproto p ((i32 a)) void)
;(defun abc ((i32 a)) void (if a (puts "H")))
;(defun abcd ((i32 a)) i32 (if a 12 9))
;(funproto a () i32)
;(defun abc () void (while (a) (a)))
;
;(struct A ((i32 a b c d e f) (float x y)))
;(defun construct-a () A (
;  (var A x)
;  x))
;(defun get-b ((A a)) i32 (memb a c))
;(defun get-y ((A a)) float (memb a y))
;(defun isgreater ((float a b)) float (+ a b))

(constant abc 10)
(constant def 32)

(defun getStuff (((opaque-ptr Point) a)) (opaque-ptr Point) a)

(struct Point ((i32 x y)))
(struct Size ((i32 w h)))
(defun (implicit-cast) cast-point-to-size ((Point p)) Size (
  (var Size (volatile) r)
  (set (memb r w) (memb p x))
  (set (memb r h) (memb p y))
 r))
(funproto use-size ((Size s)) void)
(defun user ((Point p)) void (use-size p))

(defun try (((opaque-ptr Point) a)) Size
  (ptr-deref (getStuff a)))

(global (volatile static) a (i32))
(defun set-a ((i32 g)) void (set a g))
(defun nonneg ((Point a)) i32 (if (< (memb a x) 0) (memb a y) (memb a x)))

(defun get () i32 (+ abc def))
